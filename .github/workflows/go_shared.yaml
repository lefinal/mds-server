name: "Go shared"

on: [ push, pull_request ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18

      - name: Install Deps
        working-directory: services/go/shared
        run: go get -v -d ./...

      - name: Test
        working-directory: services/go/shared
        run: go test ./...

  race_detection:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18

      - name: Install Deps
        working-directory: services/go/shared
        run: go get -v -d ./...

      - name: Race detection
        working-directory: services/go/shared
        run: go test -race -short ./...

  memory_sanitization:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18

      - name: Install Clang
        run: |
          sudo apt update
          sudo apt install clang-11

      - name: Install Deps
        working-directory: services/go/shared
        run: go get -v -d ./...

      - name: Memory sanitization
        working-directory: services/go/shared
        run: CC=clang CXX=clang++ go test -msan -short ./...

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18

      - name: Install Deps
        working-directory: services/go/shared
        run: go get -v -d ./...

      - name: Install revive
        run: go install github.com/mgechev/revive@latest

      - name: Lint
        working-directory: services/go/shared
        run: revive -config ../../../tools/go-revive.toml ./...

  code_coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18

      - name: Install Deps
        working-directory: services/go/shared
        run: go get -v -d ./...

      - name: Create Code Coverage
        working-directory: services/go/shared
        run: go test -race -coverprofile=/tmp/coverage.txt -covermode=atomic ./...

      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          env_vars: OS
          fail_ci_if_error: true
          files: /tmp/coverage.txt
          flags: go-service-shared
          verbose: true
